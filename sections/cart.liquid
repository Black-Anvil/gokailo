<style>
    .cart {
        color: var(--grays2);
        background-color: var(--grays6);
    }

    .cart__wrapper {
        padding: 40px 0 100px;
    }

    .cart__empty > *:not(:last-child) {
        margin: 0 0 24px;
    }

    .cart table {
        width: 100%;
        border-collapse: collapse;
    }

    .cart table th {
        padding: 0 12px 16px;
        text-align: left;
    }

    .cart table th:last-child,
    .cart table th:first-child {
        font-size: 0;
    }

    .cart table tbody tr {
        background-color: var(--grays5);
    }

    .cart table tbody tr:nth-child(odd) {
        background-color: #fafafa;
    }

    .cart table tbody td {
        padding: 16px 12px;
    }

    .cart table tbody td:nth-child(2) {
        width: 50%;
    }

    .cart table tbody td:nth-child(3),
    .cart table tbody td:nth-child(5) {
        width: 25%;
    }

    .cart table th:nth-child(5),
    .cart table tbody td:nth-child(5) {
        text-align: right;
    }

    .cart__item {
        position: relative;
    }

    .cart__btn-delete:hover path,
    .cart__btn-delete:focus path {
        stroke: var(--system-error);
    }

    .cart table img {
        width: 100%;
        height: 100%;
        object-fit: cover;
    }

    .cart table tbody td:first-child {
        width: 120px;
        min-width: 120px;
        height: 120px;
        box-sizing: content-box;
        padding-left: 24px;
    }

    .cart table tbody td:last-child {
        padding-right: 24px;
    }

    .cart__form {
        display: flex;
        justify-content: flex-end;
        margin: 40px 0 0;
    }

    .cart__additional {
        display: flex;
        margin: 40px 0 0;
        border-top: solid 1px var(--grays4);
        border-bottom: solid 1px var(--grays4);
    }

    .cart__additional > * {
        padding: 24px;
    }

    .cart__additional svg {
        margin: 0 0 8px;
    }

    .cart__additional > *:not(:last-child) {
        border-right: 1px solid var(--grays4);
    }

    .cart__additional .cart__bonus {
        display: flex;
        padding: 0;
    }

    .cart__bonus > *:not(:last-child) {
        border-right: 1px solid var(--grays4);
    }

    .cart__gift,
    .cart__rewards {
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        min-width: 200px;
        width: 50%;
        padding: 16px;
    }

    .cart__coupon {
        width: 100%;
    }

    .cart__coupon-form {
        display: flex;
        flex-wrap: wrap;
        margin: 24px 0 0 -8px;
    }

    .cart__coupon-form > * {
        margin: 0 0 8px 8px;
    }

    .cart__subtotal {
        display: flex;
        flex-direction: column;
        justify-content: center;
        text-align: right;
        width: 100%;
    }

    .cart__subtotal h5 {
        margin: 0 0 16px;
    }

    .cart__subtotal p {
        margin: 8px 0 0;
    }

    .cart__additional .small-text {
        color: var(--grays3);
    }

    @media screen and (max-width: 1024px) {
        .cart__wrapper {
            padding: 40px 0 0;
        }

        .cart__additional {
            display: flex;
            flex-wrap: wrap;
            margin: 0;
            border: none;
        }

        .cart__additional > * {
            padding: 16px 0;
        }

        .cart__additional > *:not(:last-child) {
            border-right: none;
        }

        .cart__gift,
        .cart__rewards {
            width: 50%;
        }

        .cart__rewards {
            border-right: solid 1px var(--grays4);
        }

        .cart__coupon {
            width: 100%;
            border-bottom: solid 1px var(--grays4);
        }

        .cart__coupon-form {
            margin-top: 16px;
        }

        .cart__subtotal {
            order: -1;
            padding-bottom: 36px;
            border-bottom: solid 1px var(--grays4);
        }

        .cart__subtotal h5 {
            margin: 0 0 8px;
        }

        .cart__form {
            margin: 16px 0 0;
        }

        .cart__bonus {
            width: 100%;
        }
    }

    @media screen and (max-width: 768px) {
        .cart__bonus {
            flex-direction: column;
        }

        .cart__bonus > * {
            width: 100%;
        }

        .cart__bonus > *:not(:last-child) {
            border-right: none;
            border-bottom: 1px solid var(--grays4);
        }
    }

    @media screen and (max-width: 425px) {
        .cart__coupon-form > * {
            width: 100%;
        }
    }
</style>

<div class="cart">
    {% render "top-logo", title: "your cart", text: "Items", count: cart.item_count %}

    <div class="cart__wrapper">
        <div class="container">
            {% if cart.empty? %}
                <div class="cart__empty">
                    <h2 class="h3-title">No products in the cart</h2>
                    <a href="{{ routes.all_products_collection_url }}" class="button button--primary">Go to shop</a>
                </div>
            {% else %}
                <div class="cart__table">
                    <table>
                        <thead>
                        <tr>
                            <th>Image</th>
                            <th>Product</th>
                            <th>Price</th>
                            <th>Quantity</th>
                            <th>Subtotal</th>
                            <th>Action</th>
                        </tr>
                        </thead>
                        <tbody>
                        {% for item in cart.items %}
                            <tr class="cart__item" data-item-key="{{ item.key }}">
                                <td>
                                    <img src="{{ item.image | product_img_url: 'small' }}" alt="{{ item.title }}">
                                </td>
                                <td>
                                    <a class="h5-title link" href="{{ item.product.url }}">{{ item.title }}</a>
                                </td>
                                <td>{{ item.product.price | money }}</td>
                                <td>
                                    {% render "stepper", quantity: item.quantity %}
                                </td>
                                <td>{{ item.final_line_price | money }}</td>
                                <td>
                                    <a class="cart__btn-delete button-icon" href="{{ item.url_to_remove }}">
                                        Remove
                                        {% render "icon-delete" %}
                                    </a>

                                    {% render "loader", type: "overlay" %}
                                </td>
                            </tr>
                        {% endfor %}
                        </tbody>
                    </table>
                </div>

                <div class="cart__additional">
                    <div class="cart__coupon">
                        {% render "icon-coupon" %}
                        <h5 class="h5-title">Apply a Coupon</h5>

                        <div class="cart__coupon-form">
                            <div class="field-block">
                                <input type="text" placeholder="Enter discount coupon"/>
                            </div>

                            <button type="submit" class="button button--primary">apply code</button>
                        </div>

                        <p class="small-text">*code are only valid for items that are not on sale</p>

                    </div>

                    <div class="cart__bonus">
                        <a href="#" class="cart__rewards">
                            {% render "icon-big-star" %}
                            <h5 class="h5-title">Pay With <br> Rewards</h5>
                        </a>

                        <a href="#" class="cart__gift">
                            {% render "icon-gift-card" %}
                            <h5 class="h5-title">Pay With <br> Gift Card</h5>
                        </a>
                    </div>

                    <div class="cart__subtotal">
                        <h5 class="h5-title">Subtotal</h5>
                        <span class="h3-title">{{ cart.total_price | money }}</span>
                        <p class="text-small">Taxes and shipping calculated at checkout</p>

                        {% form "cart", cart, class: "cart__form" %}
                            <button class="button button--primary" type="submit" name="checkout">
                                Proceed to Checkout
                            </button>
                        {% endform %}
                    </div>
                </div>
            {% endif %}
        </div>
    </div>
</div>

<script>
    const cart = document.querySelector(".cart");

    const addCartListeners = () => {
        const listItems = cart.querySelectorAll(".cart__item");

        listItems.forEach(item => {
            const key = item.dataset.itemKey;

            const deleteBtn = item.querySelector(".cart__btn-delete");
            const itemLoader = item.querySelector(".loader");

            const stepper = item.querySelector(".stepper");
            const increment = stepper.querySelector(".increment");
            const decrement = stepper.querySelector(".decrement");
            const stepperInput = stepper.querySelector("input");
            const quantity = Number(stepperInput.value);

            const updateQuantity = async (newQuantity) => {
                const res = await fetch("/cart/update.js", {
                    method: "POST",
                    headers: {
                        "Accept": "application/json",
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({updates: {[key]: newQuantity}})
                });

                return await res.json();
            };

            const changeQuantity = async (quantity) => {

                itemLoader.classList.add("isLoading");

                const cart = await updateQuantity(quantity);
                await updateCart();

                try {
                    if (updateCartDrawer) {
                        await updateCartDrawer();
                    }
                } catch (e) {
                    console.log(e);
                }

                itemLoader.classList.remove("isLoading");

                updateCartCounter(cart);
            };

            deleteBtn.addEventListener("click", () => {
                changeQuantity(0);
            });

            increment.addEventListener("click", () => {
                changeQuantity(quantity + 1);
            });

            decrement.addEventListener("click", async () => {
                changeQuantity(quantity - 1);
            });
        });
    };

    const updateCart = async () => {
        const res = await fetch("/?section_id=main-cart");
        const text = await res.text();

        const html = document.createElement("div");
        html.innerHTML = text;

        cart.innerHTML = html.querySelector(".cart").innerHTML;

        addCartListeners();
    };

    addCartListeners();
</script>
